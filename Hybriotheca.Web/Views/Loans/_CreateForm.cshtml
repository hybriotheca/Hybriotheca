@model Hybriotheca.Web.Models.Entities.CreateLoanViewModel

<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    @if (User.IsInRole("Admin"))
    {
        <!-- Library -->
        <div class="mb-3">
            <label asp-for="LibraryId" class="form-label"></label>
            <select asp-for="LibraryId" class="form-control" asp-items="ViewBag.Libraries" oninput="checkLoan()">
                <option disabled selected>Select library</option>
            </select>
            <span asp-validation-for="LibraryId" class="text-danger"></span>
        </div>
    }

    <!-- Book Edition -->
    <div class="mb-3">
        <label asp-for="BookEditionId" class="form-label"></label>
        <select asp-for="BookEditionId" class="form-control" asp-items="ViewBag.BookEditions" oninput="checkLoan()">
            <option disabled selected>Select book</option>
        </select>
        <span asp-validation-for="BookEditionId" class="text-danger"></span>
    </div>

    <!-- User -->
    <div class="mb-3">
        <label asp-for="UserId" class="form-label"></label>
        <select asp-for="UserId" class="form-control" asp-items="ViewBag.Users" oninput="checkLoan()">
            <option disabled selected>Select user</option>
        </select>
        <span asp-validation-for="UserId" class="text-danger"></span>
    </div>

    <!-- Will check out later? -->
    <div class="mb-3 form-check">
        <label class="form-check-label">
            <input asp-for="WillCheckOutLater" class="form-check-input" oninput="toggleStartDate()" /> @Html.DisplayNameFor(model => model.WillCheckOutLater)
        </label>
    </div>

    @{
        var dateTimeUtcNow = DateTime.UtcNow.ToString("yyyy-MM-dd");
    }
    <!-- Start Date -->
    <div class="mb-3" id="divStartDate" style="@(Model.WillCheckOutLater ? "" : "display: none;")">
        <label asp-for="StartDate" class="form-label"></label>
        <input asp-for="StartDate" min="@dateTimeUtcNow" value="@dateTimeUtcNow" class="form-control" />
        <span asp-validation-for="StartDate" class="text-danger"></span>
    </div>

    <!-- p elements with feedback messages from ajax request checkLoan -->
    <p id="CheckingIsBookAvailable" class="text-secondary" style="display: none">Checking availabilty...</p>
    <p id="ErrorCheckingAvailability" class="text-warning" style="display: none">Error while checking availabilty...</p>
    <p id="BookIsAvailable" class="text-success" style="display: none">This book is available at this Library.</p>
    <p id="BookIsntAvailable" class="text-danger" style="display: none">This book is not available at this Library.</p>
    <p id="LoanIsAllowed" class="text-success" style="display: none">This loan is allowed.</p>
    <p id="LoanLimit" class="text-danger" style="display: none">This user has reached the limit of loans.</p>

    <div class="mb-3">
        <input type="submit" value="Save" id="btnSave" class="btn btn-primary" disabled="true" />
    </div>

    <script type="text/javascript">
        const toggleStartDate = () => {
            if ($('#WillCheckOutLater').is(':checked')) {
                $('#divStartDate').show();
            }
            else {
                $('#divStartDate').hide();
            }
        }
        
        const checkLoan = () => {
            
            $('#btnSave').attr('disabled', true);

            $('#ErrorCheckingAvailability').hide();
            $('#BookIsAvailable').hide();
            $('#BookIsntAvailable').hide();
            $('#LoanIsAllowed').hide();
            $('#LoanLimit').hide();

            var libraryId = $('#LibraryId').val();
            var bookEditionId = $('#BookEditionId').val();

            if (libraryId < 1 || bookEditionId < 1) {
                var userId = $('#UserId').val() ?? '';
                if (userId.length == 36) {
                    $('#CheckingIsBookAvailable').show();
                    hasUserReachedLoanLimit(userId, false);
                }
                else {
                    $('#CheckingIsBookAvailable').hide();
                }
                return;
            }
            else {
                $('#CheckingIsBookAvailable').show();
            }

            isBookAvailable(libraryId, bookEditionId);
        }

        function isBookAvailable(libraryId, bookEditionId) {
            $.ajax({
                url: '@Url.Action("CheckIsBookAvailable", "BooksInStock")',
                type: 'POST',
                dataType: 'JSON',
                data: { libraryId: libraryId, bookEditionId: bookEditionId },
                success: function (response) {
                    $('#CheckingIsBookAvailable').hide();
                    if (response) {
                        var userId = $('#UserId').val() ?? '';
                        if (userId.length == 36) {
                            hasUserReachedLoanLimit(userId, true);
                        }
                        else{
                            $('#BookIsAvailable').show();
                        }
                    }
                    else {
                        $('#BookIsntAvailable').show();
                    }
                },
                error: function () {
                    $('#CheckingIsBookAvailable').hide();
                    $('#ErrorCheckingAvailability').show();
                }
            });
        }

        function hasUserReachedLoanLimit(userId, enableSave) {
            $.ajax({
                url: '@Url.Action("HasUserReachedLoanLimit", "Loans")',
                type: 'POST',
                dataType: 'JSON',
                data: { userId: userId },
                success: function (response) {
                    $('#CheckingIsBookAvailable').hide();
                    if (response == false) {
                        if (enableSave) {
                            $('#btnSave').attr('disabled', false);

                            $('#LoanIsAllowed').show();
                        }
                    }
                    else if (response == true) {
                        $('#LoanLimit').show();
                    }
                    else {
                        alert(response);
                    }
                },
                error: function () {
                    $('#CheckingIsBookAvailable').hide();
                    $('#ErrorCheckingAvailability').show();
                }
            });
        }
    </script>

</form>