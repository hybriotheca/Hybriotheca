@model IEnumerable<Hybriotheca.Web.Models.Entities.UserViewModel>

@{
    var action = ViewContext.RouteData.Values["action"];
    ViewData["Title"] = (action?.ToString() ?? "Index") == "Index" ? "Users" : action;
    Layout = "_LayoutAdminPanel";
}

<!-- HEADER -->
<div class=" pb-4 block sm:flex items-center justify-between">
    <div class="w-full mb-1">
        <div class="mb-4">
            <!-- BREADCRUMB -->
            <nav class="flex mb-5" aria-label="Breadcrumb">
                <ol class="inline-flex items-center space-x-1 text-sm font-medium md:space-x-2">
                    <li class="inline-flex items-center">
                        <a asp-controller="Home" asp-action="AdminPanel" class="inline-flex items-center text-gray-700 hover:text-primary-600 dark:text-gray-300 dark:hover:text-white">
                            <svg class="w-5 h-5 mr-2.5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                <path d="M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z"></path>
                                <path d="M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z"></path>
                            </svg>
                            Dashboard
                        </a>
                    </li>
                    <li class="inline-flex items-center">
                        <a href="/Users" class="inline-flex items-center text-gray-700 hover:text-primary-600 dark:text-gray-300 dark:hover:text-white">
                            <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path></svg>
                            Users
                        </a>
                    </li>
                    @if (ViewData["Title"].ToString() != "Users")
                    {
                        <li class="inline-flex items-center">
                            <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path></svg>
                            <span class="ml-1 text-gray-400 md:ml-2 dark:text-gray-500" aria-current="page">
                                @ViewData["Title"]
                            </span>
                        </li>
                    }
                </ol>
            </nav>
            <!-- SECTION -->
            @if (ViewData["Title"].ToString() == "Admins")
            {
                <h1 class="text-xl font-semibold text-gray-900 sm:text-2xl dark:text-white inline-flex items-center">
                    <svg class="w-5 h-5 mr-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20">
                        <path d="M16 1h-3.278A1.992 1.992 0 0 0 11 0H7a1.993 1.993 0 0 0-1.722 1H2a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2Zm-3 14H5a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2Zm0-4H5a1 1 0 0 1 0-2h8a1 1 0 1 1 0 2Zm0-5H5a1 1 0 0 1 0-2h2V2h4v2h2a1 1 0 1 1 0 2Z" />
                    </svg>
                    @ViewData["Title"]
                </h1>
            }
            else if (ViewData["Title"].ToString() == "Librarians")
            {
                <h1 class="text-xl font-semibold text-gray-900 sm:text-2xl dark:text-white inline-flex items-center">
                    <svg class="w-5 h-5 mr-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20">
                        <path d="M9 1.334C7.06.594 1.646-.84.293.653a1.158 1.158 0 0 0-.293.77v13.973c0 .193.046.383.134.55.088.167.214.306.366.403a.932.932 0 0 0 .5.147c.176 0 .348-.05.5-.147 1.059-.32 6.265.851 7.5 1.65V1.334ZM19.707.653C18.353-.84 12.94.593 11 1.333V18c1.234-.799 6.436-1.968 7.5-1.65a.931.931 0 0 0 .5.147.931.931 0 0 0 .5-.148c.152-.096.279-.235.366-.403.088-.167.134-.357.134-.55V1.423a1.158 1.158 0 0 0-.293-.77Z" />
                    </svg>
                    @ViewData["Title"]
                </h1>
            }
            else if (ViewData["Title"].ToString() == "Customers")
            {
                <h1 class="text-xl font-semibold text-gray-900 sm:text-2xl dark:text-white inline-flex items-center">
                    <svg class="w-5 h-5 mr-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20">
                        <path d="M7 9a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9Zm2 1H5a5.006 5.006 0 0 0-5 5v2a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2a5.006 5.006 0 0 0-5-5Z" />
                    </svg>
                    @ViewData["Title"]
                </h1>
            }
            else
            {
                <h1 class="text-xl font-semibold text-gray-900 sm:text-2xl dark:text-white">
                    All Users
                </h1>
            }
        </div>

        <!-- MESSAGE TO USER -->
        @if (TempData["Message"] != null)
        {
            <div class="flex items-center p-4 mb-4 text-sm text-blue-800 border border-blue-300 rounded-lg bg-blue-50 dark:bg-gray-800 dark:text-blue-400 dark:border-blue-800" role="alert">
                <svg class="flex-shrink-0 inline w-4 h-4 mr-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z" />
                </svg>
                <span class="sr-only">Info</span>
                <div>
                    @Html.Raw(TempData["Message"])
                </div>
            </div>
        }

        <div class="items-center justify-between block sm:flex md:divide-x md:divide-gray-100 dark:divide-gray-700">
            <div class="flex items-center mb-4 sm:mb-0">
                <!-- SEARCH BOX -->
                <form class="sm:pr-3" action="#" method="GET">
                    <label for="products-search" class="sr-only">Search</label>
                    <div class="relative w-48 mt-1 sm:w-64 xl:w-96">
                        <input type="text" name="search" id="products-search" class="bg-white border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Search for users">
                    </div>
                </form>
                <!-- DELETE ICON -->
                <div class="flex items-center w-full sm:justify-end">
                    <div class="flex pl-2 space-x-1">
                        <a href="#" class="inline-flex justify-center p-1 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
                            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd"></path></svg>
                        </a>
                    </div>
                </div>
            </div>
            <!-- ADD NEW BUTTON -->
            <a asp-action="Create" class="inline-flex items-center text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-primary-600 dark:hover:bg-primary-700 focus:outline-none dark:focus:ring-primary-800">
                <svg class="w-4 h-4 mr-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 18">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 1v16M1 9h16" />
                </svg>
                Add User
            </a>
        </div>
    </div>
</div>

<!-- TABLE -->
<div class="flex flex-col shadow-md">
    <div class="overflow-x-auto">
        <div class="inline-block min-w-full align-middle">
            <div class="overflow-hidden shadow rounded-lg">
                <table class="min-w-full divide-y divide-gray-200 table-fixed dark:divide-gray-600">
                    <!-- TABLE HEAD -->
                    <thead class="bg-gray-200 dark:bg-gray-700">
                        <tr>
                            <th scope="col" class="p-4">
                                <div class="flex items-center">
                                    <input id="checkbox-all" aria-describedby="checkbox-all" type="checkbox" class="w-4 h-4 border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:focus:ring-primary-600 dark:ring-offset-gray-800 dark:bg-gray-700 dark:border-gray-600">
                                    <label for="checkbox-all" class="sr-only">checkbox</label>
                                </div>
                            </th>
                            <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase dark:text-gray-400">
                                User
                            </th>
                            <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase dark:text-gray-400">
                                @Html.DisplayNameFor(model => model.Role)
                            </th>
                            <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase dark:text-gray-400">
                                @Html.DisplayNameFor(model => model.PhoneNumber)
                            </th>
                            <th scope="col" class="whitespace-nowrap w-[1%] p-4 text-xs font-medium text-left text-gray-500 uppercase dark:text-gray-400">
                                @Html.DisplayNameFor(model => model.EmailConfirmed)
                            </th>
                            <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase dark:text-gray-400">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <!-- TABLE BODY -->
                    <tbody class="bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700">

                        @{
                            int counter = 0;
                        }

                        @foreach (var user in Model)
                        {
                            <tr class="hover:bg-gray-100 dark:hover:bg-gray-700">
                                <!-- CHECKBOX -->
                                <td class="w-4 p-4">
                                    <div class="flex items-center">
                                        <input id="checkbox-@counter" aria-describedby="checkbox-@counter" type="checkbox" class="w-4 h-4 border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:focus:ring-primary-600 dark:ring-offset-gray-800 dark:bg-gray-700 dark:border-gray-600">
                                        <label for="checkbox-@counter" class="sr-only">checkbox</label>
                                    </div>
                                </td>

                                <!-- USER -->
                                <td class="flex items-center p-4 mr-12 space-x-6 whitespace-nowrap">
                                    <!-- PROFILE PICTURE -->
                                    @if (user.HasPhoto)
                                    {
                                        <div class="flex justify-center items-center max-w-xs max-h-xs w-10 h-10 rounded-full">
                                            <img class="w-full h-full object-cover rounded-full"
                                                 src="@user.PhotoFullPath"
                                                 alt="@user.FullName profile picture" />
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="flex justify-center items-center overflow-hidden max-w-xs max-h-xs w-10 h-10 rounded-full bg-gradient-to-r from-cyan-500 to-blue-500">

                                            <span class="font-bold text-white select-none">
                                                @user.NameAbbr
                                            </span>
                                        </div>
                                    }

                                    <div class="text-sm font-normal text-gray-500 dark:text-gray-400">
                                        <!-- NAME -->
                                        <div class="text-base font-semibold text-gray-900 dark:text-white">
                                            @Html.DisplayFor(modelItem => user.FullName)
                                        </div>
                                        <!-- EMAIL -->
                                        <div class="text-sm font-normal text-gray-500 dark:text-gray-400">
                                            @Html.DisplayFor(modelItem => user.Email)
                                        </div>
                                    </div>
                                </td>

                                <!-- ROLE -->
                                <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap dark:text-white">
                                    @if (user.Role == "Admin")
                                    {
                                        <span class="inline-flex items-center bg-blue-100 text-blue-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300">
                                            <svg class="w-2.5 h-2.5 mr-1.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20">
                                                <path d="M16 1h-3.278A1.992 1.992 0 0 0 11 0H7a1.993 1.993 0 0 0-1.722 1H2a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2Zm-3 14H5a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2Zm0-4H5a1 1 0 0 1 0-2h8a1 1 0 1 1 0 2Zm0-5H5a1 1 0 0 1 0-2h2V2h4v2h2a1 1 0 1 1 0 2Z" />
                                            </svg>
                                            @Html.DisplayFor(modelItem => user.Role)
                                        </span>
                                    }
                                    @if (user.Role == "Librarian")
                                    {
                                        <span class="inline-flex items-center bg-green-100 text-green-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-green-900 dark:text-green-300">
                                            <svg class="w-2.5 h-2.5 mr-1.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                                                <path d="M9 1.334C7.06.594 1.646-.84.293.653a1.158 1.158 0 0 0-.293.77v13.973c0 .193.046.383.134.55.088.167.214.306.366.403a.932.932 0 0 0 .5.147c.176 0 .348-.05.5-.147 1.059-.32 6.265.851 7.5 1.65V1.334ZM19.707.653C18.353-.84 12.94.593 11 1.333V18c1.234-.799 6.436-1.968 7.5-1.65a.931.931 0 0 0 .5.147.931.931 0 0 0 .5-.148c.152-.096.279-.235.366-.403.088-.167.134-.357.134-.55V1.423a1.158 1.158 0 0 0-.293-.77Z" />
                                            </svg>
                                            @Html.DisplayFor(modelItem => user.Role)
                                        </span>
                                    }
                                    @if (user.Role == "Customer")
                                    {
                                        <span class="inline-flex items-center bg-yellow-100 text-yellow-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-yellow-900 dark:text-yellow-300">
                                            <svg class="w-2.5 h-2.5 mr-1.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 14 18">
                                                <path d="M7 9a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9Zm2 1H5a5.006 5.006 0 0 0-5 5v2a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2a5.006 5.006 0 0 0-5-5Z" />
                                            </svg>
                                            @Html.DisplayFor(modelItem => user.Role)
                                        </span>
                                    }
                                </td>

                                <!-- PHONE NUMBER -->
                                <td class="p-4 text-base font-medium text-gray-900 whitespace-nowrap dark:text-white">
                                    @Html.DisplayFor(modelItem => user.PhoneNumber)
                                </td>

                                <!-- EMAIL CONFIRMED -->
                                <td class="p-4">
                                    <div class="flex justify-center">
                                        @if (user.EmailConfirmed)
                                        {
                                            <svg class="w-3 h-3 text-green-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">
                                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5" />
                                            </svg>
                                        }
                                        else
                                        {
                                            <svg class="w-3 h-3 text-red-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                                            </svg>
                                        }
                                    </div>
                                </td>

                                <!-- ACTIONS -->
                                <td class="p-4 space-x-2 whitespace-nowrap">
                                    <!-- EDIT -->
                                    <a asp-action="Edit"
                                       asp-route-id="@user.Id"
                                       data-tooltip-target="tooltip-edit"
                                       class="cursor-pointer inline-flex items-center px-3 py-3 text-sm font-medium text-center text-white rounded-lg bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">
                                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z"></path><path fill-rule="evenodd" d="M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z" clip-rule="evenodd"></path></svg>
                                    </a>
                                    <div id="tooltip-edit"
                                         role="tooltip"
                                         class="inline-block absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 transition-opacity duration-300 tooltip">
                                        Edit
                                        <div class="tooltip-arrow" data-popper-arrow></div>
                                    </div>

                                    <!-- DELETE -->
                                    <a hx-get
                                       hx-action="Delete"
                                       hx-route-id="@user.Id"
                                       hx-target="#popup-modal"
                                       data-tooltip-target="tooltip-delete"
                                       class="cursor-pointer inline-flex items-center px-3 py-3 text-sm font-medium text-center text-white bg-red-700 rounded-lg hover:bg-red-800 focus:ring-4 focus:ring-red-300 dark:focus:ring-red-900">
                                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd"></path></svg>
                                    </a>
                                    <div id="tooltip-delete"
                                         role="tooltip"
                                         class="inline-block absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 transition-opacity duration-300 tooltip">
                                        Delete
                                        <div class="tooltip-arrow" data-popper-arrow></div>
                                    </div>
                                </td>
                            </tr>

                            counter++;
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- POPUP MODAL -->
<div id="popup-modal" class="hidden fixed h-full w-full inset-0 z-[100]"></div>

@section Scripts{
    <script type="text/javascript">
        // Check all boxes
        var checkboxes = document.querySelectorAll('tbody input[type="checkbox"]');
        var checkboxAll = document.getElementById("checkbox-all");

        checkboxAll.addEventListener("change", function () {
            checkboxes.forEach(checkbox => {
                checkbox.checked = checkboxAll.checked;
            });
        });

        // Create Modal
        const modalContainer = document.getElementById('popup-modal');
        const options = {
            backdrop: 'dynamic',
            backdropClasses: 'bg-gray-900 bg-opacity-50 fixed inset-0 z-50',
            closable: true
        }
        var modal = new Modal(modalContainer, options);

        htmx.on('htmx:afterSwap', () => {

            modal.show();

        });

    </script>
}